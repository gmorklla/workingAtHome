<lib-loader></lib-loader>
<div class="container-fluid py-5 mb-4">
  <h6 class="mt-5"> Vinculación de campañas </h6>
  <div class="row">
    <div class="col-md-12">
      <lib-filter (filterChange)="fn_filterChange();"></lib-filter>
    </div>
    <div class="col-md-3 d-none">
      <mat-form-field>
        <input matInput (change)="fn_applyFilter($event.target.value)" placeholder="Buscar">
        <button mat-button matSuffix mat-icon-button aria-label="Search" (click)="fn_filterChange();">
          <mat-icon>search</mat-icon>
        </button>
      </mat-form-field>
    </div>
  </div>
  <div class="row">
    <div class="col-md-12">
      <table mat-table [dataSource]="dataSource" multiTemplateDataRows class="mat-elevation-z8">
        <!-- Checkbox Column -->
        <ng-container matColumnDef="select">
          <th mat-header-cell *matHeaderCellDef>
            <mat-checkbox (change)="$event ? masterToggle() : null"
                          [checked]="selection.hasValue() && isAllSelected()"
                          [indeterminate]="selection.hasValue() && !isAllSelected()">
            </mat-checkbox>
          </th>
          <td mat-cell *matCellDef="let row" class="selector">
            <mat-checkbox (click)="$event.stopPropagation();"
                          (change)="$event ? selection.toggle(row) : null;"
                          [checked]="selection.isSelected(row)">
            </mat-checkbox>
          </td>
        </ng-container>

        <!-- Campaign code -->
        <ng-container matColumnDef="code">
          <th mat-header-cell *matHeaderCellDef> Código </th>
          <td mat-cell *matCellDef="let element" class="id" (click)="fn_copy(element.code);"> {{element.code}} </td>
        </ng-container>

        <!-- Campaign name -->
        <ng-container matColumnDef="name">
          <th mat-header-cell *matHeaderCellDef> Campaña </th>
          <td mat-cell *matCellDef="let element"> {{element.name}} </td>
        </ng-container>

        <!-- Offer -->
        <ng-container matColumnDef="offer">
          <th mat-header-cell *matHeaderCellDef> Oferta </th>
          <td mat-cell *matCellDef="let element" (click)="fn_copy(element.offerCode);"> {{element.offerCode}} - {{element.offerDescription}} </td>
        </ng-container>

        <!-- Channels -->
        <ng-container matColumnDef="channels">
          <th mat-header-cell *matHeaderCellDef> Canales </th>
          <td mat-cell *matCellDef="let element" class="text-center"> {{fn_getCountLinkedChannels(element.listLinkedChannels)}} </td>
        </ng-container>

        <!-- Start date -->
        <ng-container matColumnDef="startDate">
          <th mat-header-cell *matHeaderCellDef> Fecha inicio </th>
          <td mat-cell *matCellDef="let element"> {{element.startDate | date: 'dd/MM/yyyy' }} </td>
        </ng-container>

        <!-- End date -->
        <ng-container matColumnDef="endDate">
          <th mat-header-cell *matHeaderCellDef> Fecha fin </th>
          <td mat-cell *matCellDef="let element"> {{element.endDate | date: 'dd/MM/yyyy'}} </td>
        </ng-container>

        <!-- Status -->
        <ng-container matColumnDef="status">
          <th mat-header-cell *matHeaderCellDef> Estatus </th>
          <td mat-cell *matCellDef="let element"> {{element.status.name}} </td>
        </ng-container>

        <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->
        <ng-container matColumnDef="expandedDetail">
          <td mat-cell *matCellDef="let element" [attr.colspan]="columnsToDisplay.length">
            <div class="element-detail" [@detailExpand]="element == expandedElement || fn_isExpanded(element) ? 'expanded' : 'collapsed'">
              <mat-list role="list" *ngIf="element.listLinkedChannels && element.listLinkedChannels.length > 0">
                <mat-list-item role="listitem" *ngFor="let linkedChannel of element.listLinkedChannels">
                  <div class="row my-1" *ngIf="linkedChannel.linkDate && fn_showLinkedChannel(linkedChannel)">
                    <div class="col-md-4 pt-1">
                      <span [ngClass]="{'color-red': fn_isNewLinkedChannel(linkedChannel)}"> {{linkedChannel.channel.idSubChannel}} - {{linkedChannel.channel.descriptionSubChannel}} </span>
                      <span class="badge badge-danger px-2" *ngIf="fn_isNewLinkedChannel(linkedChannel);"> Nuevo </span>
                    </div>
                    <div class="col-md-8 d-flex justify-content-end">
                      <button mat-button class="mr-2"
                              matTooltip="Vista previa"
                              [matTooltipPosition]="'above'">
                        <i class="material-icons md-18">play_circle_outline</i>
                      </button>
                      <!--<button mat-button class="btn-action" (click)="openBottomSheet(linkedChannel);">
                        <i class="material-icons md-18">tune</i> Opciones
                      </button>-->
                      <button mat-button [matMenuTriggerFor]="menu"><mat-icon>more_vert</mat-icon> Opciones</button>
                      <mat-menu #menu="matMenu">
                        <div class="text-center mb-2">
                          <small>{{linkedChannel.channel.descriptionSubChannel}}</small>
                        </div>
                        <button mat-menu-item *ngIf="linkedChannel.status.id !== LinkedChannelStatusConstant.ACTIVE">
                          <mat-icon class="color-red">wallpaper</mat-icon>
                          <span>Diseño</span>
                        </button>
                        <button mat-menu-item
                                *ngIf="linkedChannel.status.id !== LinkedChannelStatusConstant.ACTIVE"
                                (click)="fn_openDialogForSettings(linkedChannel);">
                          <mat-icon class="color-red">settings</mat-icon>
                          <span class="pr-2">Configuración</span>
                        </button>
                        <button mat-menu-item *ngIf="linkedChannel.status.id !== LinkedChannelStatusConstant.ACTIVE"
                                [disabled]="linkedChannel.status.id !== LinkedChannelStatusConstant.DESIGN && linkedChannel.status.id !== LinkedChannelStatusConstant.INACTIVE">
                          <mat-icon [ngClass]="{'color-red': linkedChannel.status.id === LinkedChannelStatusConstant.DESIGN || linkedChannel.status.id === LinkedChannelStatusConstant.INACTIVE}">check_circle_outline</mat-icon>
                          <span>Activación</span>
                        </button>
                        <button mat-menu-item *ngIf="linkedChannel.status.id === LinkedChannelStatusConstant.ACTIVE">
                          <mat-icon class="color-red">not_interested</mat-icon>
                          <span>Desactivación</span>
                        </button>
                        <button mat-menu-item
                                *ngIf="linkedChannel.status.id !== LinkedChannelStatusConstant.ACTIVE"
                                (click)="fn_openDialogForDLink(linkedChannel);">
                          <mat-icon class="color-red">delete_outline</mat-icon>
                          <span>Desvincular</span>
                        </button>
                      </mat-menu>
                      <p class="text-dark width-120 m-0 p-2"><span matTooltip="Estatus" [matTooltipPosition]="'above'">{{linkedChannel.status.name}}</span></p>
                    </div>
                  </div>
                </mat-list-item>
              </mat-list>
              <div class="d-flex align-items-center color-red p-3 m-0"
                *ngIf="!element.listLinkedChannels || element.listLinkedChannels.length === 0">
                <i class="material-icons">error_outline</i> <span class="ml-2"> No existe ningún canal vinculado a esta campaña </span>
              </div>
            </div>
          </td>
        </ng-container>

        <tr mat-header-row *matHeaderRowDef="columnsToDisplay"></tr>
        <tr mat-row *matRowDef="let element; columns: columnsToDisplay;"
            class="element-row"
            [class.expanded-row]="expandedElement === element"
            (click)="fn_resetExpendedList(); expandedElement = expandedElement === element ? null : element;"><!-- selection.toggle(element); -->
        </tr>
        <tr mat-row *matRowDef="let row; columns: ['expandedDetail']" class="detail-row"></tr>
      </table>
      <mat-paginator [length]="length"
                     [pageSize]="pageSize"
                     [pageSizeOptions]="pageSizeOptions"
                     (page)="pageEvent = $event; fn_pageAll();">
      </mat-paginator>
      <div class="d-flex align-items-center color-red p-3 m-0"
           *ngIf="dataSource && dataSource.data.length === 0">
        <i class="material-icons">error_outline</i> <span class="ml-2"> No se encontró ningún resultado </span>
      </div>
    </div>
  </div>
</div>
<mat-card class="page-footer py-2 d-flex justify-content-end">
  <button mat-button color="primary" class="btn-action mr-1"
          (click)="fn_refresh();"><i class="material-icons">refresh</i> Refresh </button>
  <button mat-raised-button color="primary" class="btn-action"
          [disabled]="selection.selected.length === 0"
          (click)="fn_openDialogForLink();"><i class="material-icons">device_hub</i> Vincular </button>
</mat-card>
